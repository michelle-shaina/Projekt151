@page "/addemployee"
@using Projekt151.Model
@inject NavigationManager NavigationManager
@inject Services.IMitarbeiterService EmployeeService
@inject Services.IStadtService CityService
@inject Services.IRoleService RoleService

<h2>Create Employee</h2>
<hr />
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input for="Name" class="form-control" @bind="@employee.MitarbeiterName" />
            </div>
            <div class="form-group">
                <label for="City" class="control-label">City</label>
                <select for="City" class="form-control" @bind="@employee.StadtId">
                    <option value="">-- Select City --</option>
                    @foreach (var city in cities)
                    {
        <option value="@city.StadtId">@city.StadtName</option>
}
                </select>
            </div>
            <div class="form-group">
                <label for="City" class="control-label">Role</label>
                <select for="City" class="form-control" @bind="@employee.RoleId">
                    <option value="">-- Select Role --</option>
                    @foreach (var role in roles)
                    {
        <option value="@role.RoleId">@role.RoleName</option>
}
                </select>
            </div>
            <div class="form-group">
                <label for="Password" class="control-label">Password</label>
                <input for="Password" type="password" class="form-control" @bind="@employee.Password" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateEmployee" value="Save" />
                <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    Mitarbeiter employee = new Mitarbeiter();
    IEnumerable<Role> roles = new List<Role>();
    IEnumerable<Stadt> cities = new List<Stadt>();

    protected override async Task OnInitializedAsync()
    {
        cities = await CityService.GetCities();
        roles = await RoleService.GetRoles();
    }

    protected async Task CreateEmployee()
    {
        await EmployeeService.CreateEmployee(employee);
        NavigationManager.NavigateTo("listemployees");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("listemployees");
    }
}     