@page "/deleterole/{id:int}"
@using Projekt151.Model
@inject NavigationManager NavigationManager
@inject Services.IRoleService RoleService
@inject Services.IMitarbeiterService EmployeeService

<h2>Confirm Delete</h2>
<p>Are you sure you want to delete this Role with Id :<b> @id</b></p>
<br />
@if (isUsed)
{
    <label for="Hint" style="color: red" class="control-label">This Role is in use from at least one Employee</label>
}
<div class="col-md-4">
    <table class="table">
        <tr>
            <td>Name</td>
            <td>@role.RoleName</td>
        </tr>
    </table>
    <div class="form-group">
        <input type="button" value="Delete" @onclick="@Delete" class="btn btn-danger" />
        <input type="button" value="Cancel" @onclick="@Cancel" class="btn" />
    </div>
</div>

@code { [Parameter]
    public int id { get; set; }
    Role role = new Role();
    IEnumerable<MitarbeiterModel> employees;
    bool isUsed = false;

    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeeService.GetEmployees();
        role = await RoleService.SingleRole(id);
    }

    protected async Task Delete()
    {
        foreach (var e in employees)
        {
            if (e.RoleId == id)
            {
                isUsed = true;
            }
        }
        if (!isUsed)
        {
            await RoleService.DeleteRole(id);
            NavigationManager.NavigateTo("listroles");
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("listroles");
    } }     