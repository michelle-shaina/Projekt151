@page "/editemployee/{id:int}"
@using Projekt151.Model
@inject NavigationManager NavigationManager
@inject Services.IMitarbeiterService EmployeeService
@inject Services.IStadtService CityService

<h2>Edit Employee</h2>
<hr />
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input for="Name" class="form-control" @bind="@employee.MitarbeiterName" />
            </div>
            <div class="form-group">
                <label for="City" class="control-label">City</label>
                <select for="City" class="form-control" @bind="@employee.StadtId">
                    <option value="">-- Select City --</option>
                    @foreach (var city in cities)
                    {
                        <option value="@city.StadtId">@city.StadtName</option>

                    }
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@UpdateEmployee" value="Update" />
            <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</form>

@code {

    [Parameter]
    public int id { get; set; }

    MitarbeiterModel employee = new MitarbeiterModel();
    IEnumerable<Stadt> cities = new List<Stadt>();

    protected override async Task OnInitializedAsync()
    {
        cities = await CityService.GetCities();
        employee = await EmployeeService.SingleEmployee(id);
    }

    protected async Task UpdateEmployee()
    {
        await EmployeeService.EditEmployee(id, employee);
        NavigationManager.NavigateTo("listemployees");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("listemployees");
    }
}     